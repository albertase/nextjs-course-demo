{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/nextjs-project/pages/index.js\";\n// import React, { useEffect, useState } from 'react'\nimport { MongoClient } from \"mongodb\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\"; // import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nfunction HomePage(props) {\n  // const [loading, setLoading] = useState(false)\n  // const [loadedMeetups, setLoadedMeetups] = useState([])\n  // useEffect(()=> {\n  //   if(loading){\n  //   setLoading(true)\n  //   }else{\n  //     setLoading(false)\n  //   }\n  // }, [loading])\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"People's Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active People's Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n} // export const getServerSideProps = async context => {\n//   // fetch API\n//   return {\n//     props: {\n//       meetup: DUMMY_DATA\n//     },\n//   };\n// };\n\n\nexport const getStaticProps = async context => {\n  // fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs:albert12345@cluster0.f97vrjv.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetup: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address\n      }))\n    },\n    revalidate: 10\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/home/albert/Desktop/albert.com/the-complete-react/nextjs-project/pages/index.js"],"names":["MongoClient","Fragment","useState","useEffect","MeetupList","Head","HomePage","props","meetup","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","map","id","_id","toString","title","image","address","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEQ,OAAO,CAACI,GAAR,CAAaZ,MAAD,KAAa;AAC/Ba,QAAAA,EAAE,EAAEb,MAAM,CAACc,GAAP,CAAWC,QAAX,EAD2B;AAE/BC,QAAAA,KAAK,EAAEhB,MAAM,CAACgB,KAFiB;AAG/BC,QAAAA,KAAK,EAAEjB,MAAM,CAACiB,KAHiB;AAI/BC,QAAAA,OAAO,EAAElB,MAAM,CAACkB;AAJe,OAAb,CAAZ;AADH,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CAvBM;AAyBP,eAAerB,QAAf","sourcesContent":["// import React, { useEffect, useState } from 'react'\nimport { MongoClient } from \"mongodb\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\n\n\nfunction HomePage(props) {\n  // const [loading, setLoading] = useState(false)\n  // const [loadedMeetups, setLoadedMeetups] = useState([])\n  // useEffect(()=> {\n  //   if(loading){\n  //   setLoading(true)\n  //   }else{\n  //     setLoading(false)\n  //   }\n  // }, [loading])\n  return (\n    <Fragment>\n      <Head>\n        <title>People's Meetups</title>\n        <meta\n          name=\"description\"\n          content=\"Browse a huge list of highly active People's Meetups\"\n        />\n      </Head>\n       <MeetupList meetups={props.meetup} />\n    </Fragment>\n  );\n}\n\n// export const getServerSideProps = async context => {\n//   // fetch API\n//   return {\n//     props: {\n//       meetup: DUMMY_DATA\n//     },\n//   };\n// };\n\nexport const getStaticProps = async (context) => {\n  // fetch data from API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nextjs:albert12345@cluster0.f97vrjv.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n    \n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetup: meetups.map((meetup) => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n      })),\n    },\n    revalidate: 10,\n  };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}