{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/nextjs-project/pages/[meetupId]/index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/albert/Desktop/albert.com/the-complete-react/nextjs-project/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQN,a;;AAwDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <MeetupDetail\n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </Fragment>\n  );\n}\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://nextjs:albert12345@cluster0.f97vrjv.mongodb.net/meetups?retryWrites=true&w=majority')\n        const db = client.db()\n\n        const meetupsCollection = db.collection('meetups')\n        const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n        client.close()\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId : meetup._id.toString()\n      }\n    }))\n  \n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetId = context.params.meetupId;   // meetup in the created as a folder.\n  console.log(meetId);\n\n  const client = await MongoClient.connect('mongodb+srv://nextjs:albert12345@cluster0.f97vrjv.mongodb.net/meetups?retryWrites=true&w=majority')\n        const db = client.db()\n\n        const meetupsCollection = db.collection('meetups')\n\n        const selectedMeetup = await meetupsCollection.findOne({_id: meetId})\n  return {\n    props: {\n      meetupData: {\n        image: selectedMeetup.image,\n        id: meetId,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup,\n      },\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}